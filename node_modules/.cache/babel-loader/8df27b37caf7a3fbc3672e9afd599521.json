{"ast":null,"code":"var _jsxFileName = \"/home/alan/git/joystck-ros/src/Components/Example.js\";\nimport React, { Component } from 'react';\nimport ReactNipple from 'react-nipple'; // optional: include the stylesheet somewhere in your app\n\nimport 'react-nipple/lib/styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Example extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(ReactNipple // supports all nipplejs options\n      // see https://github.com/yoannmoinet/nipplejs#options\n      , {\n        options: {\n          mode: 'static',\n          position: {\n            top: '50%',\n            left: '50%'\n          }\n        } // any unknown props will be passed to the container element, e.g. 'title', 'style' etc\n        ,\n        style: {\n          outline: '1px dashed red',\n          width: 150,\n          height: 150 // if you pass position: 'relative', you don't need to import the stylesheet\n\n        } // all events supported by nipplejs are available as callbacks\n        // see https://github.com/yoannmoinet/nipplejs#start\n        ,\n        onMove: (evt, data) => console.log(evt, data)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Example;","map":{"version":3,"sources":["/home/alan/git/joystck-ros/src/Components/Example.js"],"names":["React","Component","ReactNipple","Example","render","mode","position","top","left","outline","width","height","evt","data","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,WAAP,MAAwB,cAAxB,C,CAEA;;AACA,OAAO,6BAAP;;;AAEA,MAAMC,OAAN,SAAsBF,SAAtB,CAAgC;AAC5BG,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,6BACI,QAAC,WAAD,CACI;AACA;AAFJ;AAGI,QAAA,OAAO,EAAE;AAAEC,UAAAA,IAAI,EAAE,QAAR;AAAkBC,UAAAA,QAAQ,EAAE;AAAEC,YAAAA,GAAG,EAAE,KAAP;AAAcC,YAAAA,IAAI,EAAE;AAApB;AAA5B,SAHb,CAII;AAJJ;AAKI,QAAA,KAAK,EAAE;AACHC,UAAAA,OAAO,EAAE,gBADN;AAEHC,UAAAA,KAAK,EAAE,GAFJ;AAGHC,UAAAA,MAAM,EAAE,GAHL,CAIH;;AAJG,SALX,CAWI;AACA;AAZJ;AAaI,QAAA,MAAM,EAAE,CAACC,GAAD,EAAMC,IAAN,KAAeC,OAAO,CAACC,GAAR,CAAYH,GAAZ,EAAiBC,IAAjB;AAb3B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAmBH;;AArB2B;;AAwBhC,eAAeV,OAAf","sourcesContent":["import React, { Component } from 'react';\nimport ReactNipple from 'react-nipple';\n \n// optional: include the stylesheet somewhere in your app\nimport 'react-nipple/lib/styles.css';\n\nclass Example extends Component {\n    render() {\n        return (\n            <div>\n                <ReactNipple\n                    // supports all nipplejs options\n                    // see https://github.com/yoannmoinet/nipplejs#options\n                    options={{ mode: 'static', position: { top: '50%', left: '50%' } }}\n                    // any unknown props will be passed to the container element, e.g. 'title', 'style' etc\n                    style={{\n                        outline: '1px dashed red',\n                        width: 150,\n                        height: 150\n                        // if you pass position: 'relative', you don't need to import the stylesheet\n                    }}\n                    // all events supported by nipplejs are available as callbacks\n                    // see https://github.com/yoannmoinet/nipplejs#start\n                    onMove={(evt, data) => console.log(evt, data)}\n                />\n            </div>\n        );\n    }\n}\n\nexport default Example;"]},"metadata":{},"sourceType":"module"}