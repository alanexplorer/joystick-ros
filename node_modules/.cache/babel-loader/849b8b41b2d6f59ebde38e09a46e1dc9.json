{"ast":null,"code":"var _jsxFileName = \"/home/alan/git/joystck-ros/src/Components/Joystck.js\";\nimport React, { Component } from 'react';\nimport ReactNipple from 'react-nipple';\nimport ROSLIB from 'roslib';\nimport Config from \"./config\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Joystck extends Component {\n  constructor() {\n    super();\n    this.state = {\n      ros: null,\n      linear: 0,\n      angular: 0\n    };\n    this.init_connection();\n    this.move = this.move.bind(this);\n  }\n\n  init_connection() {\n    // eslint-disable-next-line\n    this.state.ros = new ROSLIB.Ros();\n    this.state.ros.on(\"connection\", () => {\n      console.info(\"Connected to ROS:TELEOP\");\n    });\n    this.state.ros.on(\"close\", () => {\n      console.warn(\"Disconnected from ROS:TELEOP\");\n      setTimeout(() => {\n        try {\n          this.state.ros.connect(\"ws://\" + Config.ROSBRIDGE_SERVER_IP + \":\" + Config.ROSBRIDGE_SERVER_PORT + \"\");\n        } catch (error) {\n          console.error(\"Connection problem : TELEOP\");\n        }\n      }, Config.RECONNECTION_TIMER);\n    });\n    this.state.ros.on(\"error\", error => {});\n\n    try {\n      this.state.ros.connect(\"ws://\" + Config.ROSBRIDGE_SERVER_IP + \":\" + Config.ROSBRIDGE_SERVER_PORT + \"\");\n    } catch (error) {\n      console.error(\"Connection problem : TELEOP\");\n    }\n  }\n\n  move(evt, data) {\n    var max_linear = 5.0; // m/s\n\n    var max_angular = 2.0; // rad/s\n\n    var max_distance = 75.0; // pixels;\n\n    var linear_speed = Math.sin(data.angle.radian) * max_linear * data.distance / max_distance;\n    var angular_speed = -Math.cos(data.angle.radian) * max_angular * data.distance / max_distance;\n    this.setState({\n      linear: linear_speed,\n      angular: angular_speed\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(ReactNipple, {\n        options: {\n          mode: 'static',\n          position: {\n            top: '50%',\n            left: '50%'\n          },\n          color: '#0066ff',\n          size: 150\n        },\n        style: {\n          width: 150,\n          height: 150,\n          position: 'relative'\n        },\n        onMove: (evt, data) => console.log(evt, data)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Joystck;","map":{"version":3,"sources":["/home/alan/git/joystck-ros/src/Components/Joystck.js"],"names":["React","Component","ReactNipple","ROSLIB","Config","Joystck","constructor","state","ros","linear","angular","init_connection","move","bind","Ros","on","console","info","warn","setTimeout","connect","ROSBRIDGE_SERVER_IP","ROSBRIDGE_SERVER_PORT","error","RECONNECTION_TIMER","evt","data","max_linear","max_angular","max_distance","linear_speed","Math","sin","angle","radian","distance","angular_speed","cos","setState","render","mode","position","top","left","color","size","width","height","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;;AAEA,MAAMC,OAAN,SAAsBJ,SAAtB,CAAgC;AAO/BK,EAAAA,WAAW,GAAE;AACZ;AADY,SALVC,KAKU,GALF;AACVC,MAAAA,GAAG,EAAG,IADI;AAEJC,MAAAA,MAAM,EAAE,CAFJ;AAGJC,MAAAA,OAAO,EAAE;AAHL,KAKE;AAEZ,SAAKC,eAAL;AAEM,SAAKC,IAAL,GAAY,KAAKA,IAAL,CAAUC,IAAV,CAAe,IAAf,CAAZ;AACN;;AAEDF,EAAAA,eAAe,GAAE;AAChB;AACA,SAAKJ,KAAL,CAAWC,GAAX,GAAiB,IAAIL,MAAM,CAACW,GAAX,EAAjB;AAEA,SAAKP,KAAL,CAAWC,GAAX,CAAeO,EAAf,CAAkB,YAAlB,EAAgC,MAAM;AACrCC,MAAAA,OAAO,CAACC,IAAR,CAAa,yBAAb;AACA,KAFD;AAIA,SAAKV,KAAL,CAAWC,GAAX,CAAeO,EAAf,CAAkB,OAAlB,EAA2B,MAAM;AAChCC,MAAAA,OAAO,CAACE,IAAR,CAAa,8BAAb;AACAC,MAAAA,UAAU,CAAC,MAAI;AACd,YAAG;AACF,eAAKZ,KAAL,CAAWC,GAAX,CAAeY,OAAf,CACC,UAAQhB,MAAM,CAACiB,mBAAf,GAAmC,GAAnC,GAAuCjB,MAAM,CAACkB,qBAA9C,GAAoE,EADrE;AAGA,SAJD,CAIC,OAAMC,KAAN,EAAY;AACZP,UAAAA,OAAO,CAACO,KAAR,CAAc,6BAAd;AACA;AACD,OARS,EAQRnB,MAAM,CAACoB,kBARC,CAAV;AASA,KAXD;AAaA,SAAKjB,KAAL,CAAWC,GAAX,CAAeO,EAAf,CAAkB,OAAlB,EAA4BQ,KAAD,IAAW,CAAE,CAAxC;;AAEA,QAAG;AACF,WAAKhB,KAAL,CAAWC,GAAX,CAAeY,OAAf,CACC,UAAQhB,MAAM,CAACiB,mBAAf,GAAmC,GAAnC,GAAuCjB,MAAM,CAACkB,qBAA9C,GAAoE,EADrE;AAGA,KAJD,CAIC,OAAMC,KAAN,EAAY;AACZP,MAAAA,OAAO,CAACO,KAAR,CAAc,6BAAd;AACA;AACD;;AACEX,EAAAA,IAAI,CAACa,GAAD,EAAMC,IAAN,EAAY;AAEZ,QAAIC,UAAU,GAAG,GAAjB,CAFY,CAEU;;AACtB,QAAIC,WAAW,GAAG,GAAlB,CAHY,CAGW;;AACvB,QAAIC,YAAY,GAAG,IAAnB,CAJY,CAIa;;AACzB,QAAIC,YAAY,GAAGC,IAAI,CAACC,GAAL,CAASN,IAAI,CAACO,KAAL,CAAWC,MAApB,IAA8BP,UAA9B,GAA2CD,IAAI,CAACS,QAAhD,GAAyDN,YAA5E;AACA,QAAIO,aAAa,GAAG,CAACL,IAAI,CAACM,GAAL,CAASX,IAAI,CAACO,KAAL,CAAWC,MAApB,CAAD,GAA+BN,WAA/B,GAA6CF,IAAI,CAACS,QAAlD,GAA2DN,YAA/E;AAEA,SAAKS,QAAL,CAAc;AAAC7B,MAAAA,MAAM,EAAEqB,YAAT;AAAuBpB,MAAAA,OAAO,EAAE0B;AAAhC,KAAd;AACH;;AAEDG,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,6BACI,QAAC,WAAD;AACI,QAAA,OAAO,EAAE;AAAEC,UAAAA,IAAI,EAAE,QAAR;AAAkBC,UAAAA,QAAQ,EAAE;AAAEC,YAAAA,GAAG,EAAE,KAAP;AAAcC,YAAAA,IAAI,EAAE;AAApB,WAA5B;AAAyDC,UAAAA,KAAK,EAAE,SAAhE;AAA2EC,UAAAA,IAAI,EAAE;AAAjF,SADb;AAEI,QAAA,KAAK,EAAE;AACHC,UAAAA,KAAK,EAAE,GADJ;AAEHC,UAAAA,MAAM,EAAE,GAFL;AAGHN,UAAAA,QAAQ,EAAE;AAHP,SAFX;AAOI,QAAA,MAAM,EAAE,CAAChB,GAAD,EAAMC,IAAN,KAAeV,OAAO,CAACgC,GAAR,CAAYvB,GAAZ,EAAiBC,IAAjB;AAP3B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAaH;;AAtE2B;;AAyEhC,eAAerB,OAAf","sourcesContent":["import React, { Component } from 'react';\nimport ReactNipple from 'react-nipple';\nimport ROSLIB from 'roslib';\nimport Config from \"./config\";\n\nclass Joystck extends Component {\n\n    state = {\n\t\tros : null,\n        linear: 0,\n        angular: 0,\n\t};\n\tconstructor(){\n\t\tsuper();\n\t\tthis.init_connection();\n\n        this.move = this.move.bind(this);\n\t}\n\n\tinit_connection(){\n\t\t// eslint-disable-next-line\n\t\tthis.state.ros = new ROSLIB.Ros();\n\n\t\tthis.state.ros.on(\"connection\", () => {\n\t\t\tconsole.info(\"Connected to ROS:TELEOP\");\n\t\t});\n\n\t\tthis.state.ros.on(\"close\", () => {\n\t\t\tconsole.warn(\"Disconnected from ROS:TELEOP\");\n\t\t\tsetTimeout(()=>{\n\t\t\t\ttry{\n\t\t\t\t\tthis.state.ros.connect(\n\t\t\t\t\t\t\"ws://\"+Config.ROSBRIDGE_SERVER_IP+\":\"+Config.ROSBRIDGE_SERVER_PORT+\"\"\n\t\t\t\t\t);\n\t\t\t\t}catch(error){\n\t\t\t\t\tconsole.error(\"Connection problem : TELEOP\");\n\t\t\t\t}\n\t\t\t},Config.RECONNECTION_TIMER);\n\t\t});\n\n\t\tthis.state.ros.on(\"error\", (error) => {});\n\n\t\ttry{\n\t\t\tthis.state.ros.connect(\n\t\t\t\t\"ws://\"+Config.ROSBRIDGE_SERVER_IP+\":\"+Config.ROSBRIDGE_SERVER_PORT+\"\"\n\t\t\t);\n\t\t}catch(error){\n\t\t\tconsole.error(\"Connection problem : TELEOP\");\n\t\t}\n\t}\n    move(evt, data) {\n\n        var max_linear = 5.0; // m/s\n        var max_angular = 2.0; // rad/s\n        var max_distance = 75.0; // pixels;\n        var linear_speed = Math.sin(data.angle.radian) * max_linear * data.distance/max_distance;\n        var angular_speed = -Math.cos(data.angle.radian) * max_angular * data.distance/max_distance;\n\n        this.setState({linear: linear_speed, angular: angular_speed});\n    }\n\n    render() {\n        return (\n            <div>\n                <ReactNipple\n                    options={{ mode: 'static', position: { top: '50%', left: '50%' }, color: '#0066ff', size: 150 }}\n                    style={{\n                        width: 150,\n                        height: 150,\n                        position: 'relative'\n                    }}\n                    onMove={(evt, data) => console.log(evt, data)}\n                    />\n            </div>\n        );\n    }\n}\n\nexport default Joystck;"]},"metadata":{},"sourceType":"module"}